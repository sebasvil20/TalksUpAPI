// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package app

import (
	"github.com/google/wire"
	"github.com/sebasvil20/TalksUpAPI/src/api/app/providers"
	"github.com/sebasvil20/TalksUpAPI/src/api/controllers"
	"github.com/sebasvil20/TalksUpAPI/src/api/repository"
	"github.com/sebasvil20/TalksUpAPI/src/api/services"
)

// Injectors from app.go:

func StartProviders() *ProviderRoute {
	userRepository := providers.ProvideUserRepository()
	categoryRepository := providers.ProvideCategoryRepository()
	userService := providers.ProvideUserService(userRepository, categoryRepository)
	reviewRepository := providers.ProvideReviewRepository()
	reviewService := providers.ProvideReviewService(reviewRepository)
	userController := providers.ProvideUserController(userService, reviewService)
	categoryService := providers.ProvideCategoryService(categoryRepository)
	categoryController := providers.ProvideCategoryController(categoryService)
	uploaderService := providers.ProvideUploaderService()
	uploaderController := providers.ProvideUploaderController(uploaderService)
	podcastRepository := providers.ProvidePodcastRepository()
	podcastService := providers.ProvidePodcastService(podcastRepository)
	podcastController := providers.ProvidePodcastController(podcastService, reviewService)
	authorRepository := providers.ProvideAuthorRepository(podcastRepository)
	authorService := providers.ProvideAuthorService(authorRepository)
	authorController := providers.ProvideAuthorController(authorService)
	listRepository := providers.ProvideListRepository()
	listService := providers.ProvideListService(listRepository)
	listController := providers.ProvideListController(listService)
	reviewController := providers.ProvideReviewController(reviewService)
	providerRoute := &ProviderRoute{
		UserController:     userController,
		CategoryController: categoryController,
		UploaderController: uploaderController,
		PodcastController:  podcastController,
		AuthorController:   authorController,
		ListController:     listController,
		ReviewController:   reviewController,
	}
	return providerRoute
}

// app.go:

type ProviderRoute struct {
	UserController     *controllers.UserController
	CategoryController *controllers.CategoryController
	UploaderController *controllers.UploaderController
	PodcastController  *controllers.PodcastController
	AuthorController   *controllers.AuthorController
	ListController     *controllers.ListController
	ReviewController   *controllers.ReviewController
}

var userSet = wire.NewSet(providers.ProvideUserRepository, wire.Bind(new(repository.IUserRepository), new(*repository.UserRepository)), providers.ProvideUserService, wire.Bind(new(services.IUserService), new(*services.UserService)), providers.ProvideUserController, wire.Bind(new(controllers.IUserController), new(*controllers.UserController)))

var categorySet = wire.NewSet(providers.ProvideCategoryRepository, wire.Bind(new(repository.ICategoryRepository), new(*repository.CategoryRepository)), providers.ProvideCategoryService, wire.Bind(new(services.ICategoryService), new(*services.CategoryService)), providers.ProvideCategoryController, wire.Bind(new(controllers.ICategoryController), new(*controllers.CategoryController)))

var uploaderSet = wire.NewSet(providers.ProvideUploaderService, wire.Bind(new(services.IUploaderService), new(*services.UploaderService)), providers.ProvideUploaderController, wire.Bind(new(controllers.IUploaderController), new(*controllers.UploaderController)))

var podcastSet = wire.NewSet(providers.ProvidePodcastRepository, wire.Bind(new(repository.IPodcastRepository), new(*repository.PodcastRepository)), providers.ProvidePodcastService, wire.Bind(new(services.IPodcastService), new(*services.PodcastService)), providers.ProvidePodcastController, wire.Bind(new(controllers.IPodcastController), new(*controllers.PodcastController)))

var authorSet = wire.NewSet(providers.ProvideAuthorRepository, wire.Bind(new(repository.IAuthorRepository), new(*repository.AuthorRepository)), providers.ProvideAuthorService, wire.Bind(new(services.IAuthorService), new(*services.AuthorService)), providers.ProvideAuthorController, wire.Bind(new(controllers.IAuthorController), new(*controllers.AuthorController)))

var listSet = wire.NewSet(providers.ProvideListRepository, wire.Bind(new(repository.IListRepository), new(*repository.ListRepository)), providers.ProvideListService, wire.Bind(new(services.IListService), new(*services.ListService)), providers.ProvideListController, wire.Bind(new(controllers.IListController), new(*controllers.ListController)))

var reviewSet = wire.NewSet(providers.ProvideReviewRepository, wire.Bind(new(repository.IReviewRepository), new(*repository.ReviewRepository)), providers.ProvideReviewService, wire.Bind(new(services.IReviewService), new(*services.ReviewService)), providers.ProvideReviewController, wire.Bind(new(controllers.IReviewController), new(*controllers.ReviewController)))

var setProvider = wire.NewSet(
	userSet,
	categorySet,
	uploaderSet,
	podcastSet,
	authorSet,
	listSet,
	reviewSet, wire.Struct(new(ProviderRoute), "UserController", "CategoryController", "UploaderController",
		"PodcastController", "AuthorController", "ListController", "ReviewController"),
)
